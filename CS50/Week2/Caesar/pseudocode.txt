Goals: Make Cipher text program created from teh plain text a user gives

Key aspects to consider:
~ The formula is as follows: Ci = (Pi + k) % 26
-Ci = is each letter
-Pi = is the ith char in p
-k = is the secrect key (non-negitive integer)
-%26 = means "remainder when divising by 26



Steps:
1) Check to be sure we have two argc counts
- only one comand line arugement - DONE!
- if user does not give a single command line arguement of a number we need to remind them  of this by saying: Usage: ./caesar key
- - if it is not a decimal digit and should return main a value of 1 - DONE!

2) get user input on how many 'rotations' the plain text will but rotated each char by k positions - there is a segmenation dump error here


3) prompt user for plaintext: (with two spaces but without a newline) using get_string

4) output ciphertext: (with one space but without a newline)  followed by plaintext's corresponding ciphertext, with each alphabetical charter in plaintext rotted by k positions
- Non-alphabetical characters should be outputed unchanged.
- change string into an integer first
- look cose case sentiva aspects: upper case stays upper case and lower cas stays lower case.
- take into consideration that if k goes over 26 we do not get and overflow.
Example: if k - 27 "A" should not be "[" even though "[" is in teh 27th postion on the ASCII chart.

5) After outputing ciphertext you should print a newline and program exits by returning 0 from main.
